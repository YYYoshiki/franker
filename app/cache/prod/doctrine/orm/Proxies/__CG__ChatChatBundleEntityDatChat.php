<?php

namespace Proxies\__CG__\Chat\ChatBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DatChat extends \Chat\ChatBundle\Entity\DatChat implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'auto_num', 'par_id', 'text', 'post_time', 'state_type', 'attend_code', 'num_sympathy', 'common_id', 'parentcomment', 'childcomment');
        }

        return array('__isInitialized__', 'auto_num', 'par_id', 'text', 'post_time', 'state_type', 'attend_code', 'num_sympathy', 'common_id', 'parentcomment', 'childcomment');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DatChat $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getAuto_num()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuto_num', array());

        return parent::getAuto_num();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuto_num($auto_num)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuto_num', array($auto_num));

        return parent::setAuto_num($auto_num);
    }

    /**
     * {@inheritDoc}
     */
    public function getPar_id()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPar_id', array());

        return parent::getPar_id();
    }

    /**
     * {@inheritDoc}
     */
    public function setPar_id($par_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPar_id', array($par_id));

        return parent::setPar_id($par_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', array());

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function setText($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', array($text));

        return parent::setText($text);
    }

    /**
     * {@inheritDoc}
     */
    public function getPost_time()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPost_time', array());

        return parent::getPost_time();
    }

    /**
     * {@inheritDoc}
     */
    public function setPost_time($post_time)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPost_time', array($post_time));

        return parent::setPost_time($post_time);
    }

    /**
     * {@inheritDoc}
     */
    public function getState_type()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState_type', array());

        return parent::getState_type();
    }

    /**
     * {@inheritDoc}
     */
    public function setState_type($state_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState_type', array($state_type));

        return parent::setState_type($state_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttend_code()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttend_code', array());

        return parent::getAttend_code();
    }

    /**
     * {@inheritDoc}
     */
    public function getParentcomment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentcomment', array());

        return parent::getParentcomment();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildcomment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildcomment', array());

        return parent::getChildcomment();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentcomment($parentcomment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentcomment', array($parentcomment));

        return parent::setParentcomment($parentcomment);
    }

    /**
     * {@inheritDoc}
     */
    public function setChildcomment($childcomment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildcomment', array($childcomment));

        return parent::setChildcomment($childcomment);
    }

    /**
     * {@inheritDoc}
     */
    public function setAttend_code($attend_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttend_code', array($attend_code));

        return parent::setAttend_code($attend_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getNum_sympathy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNum_sympathy', array());

        return parent::getNum_sympathy();
    }

    /**
     * {@inheritDoc}
     */
    public function setNum_sympathy($num_sympathy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNum_sympathy', array($num_sympathy));

        return parent::setNum_sympathy($num_sympathy);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommon_id()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommon_id', array());

        return parent::getCommon_id();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommon_id($common_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommon_id', array($common_id));

        return parent::setCommon_id($common_id);
    }

}
